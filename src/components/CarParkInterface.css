:root {
  /* Define CSS variables for colors */
  --border-color: #00aaff;
  --text-color: #333;
  --available-color: #e0f7fa;
  --booked-color: #ffcdd2;
  --error-color: #f44336;
  --selected-color: #b2ebf2;
  --highlight-color: #00bcd4;
  --button-color: #00bcd4;
  /* Base font size */
  font-size: 16px; /* Standard browser font size is usually 16px */
}
@import url("https://fonts.googleapis.com/css2?family=Monoton&family=Quicksand:wght@500;700&display=swap");

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  font-size: 62.5%;
}

body {
  font-size: 2.4rem;
  font-family: sans-serif;
  color: #5a3e2b;
  font-family: "Quicksand";
  font-weight: 500;
}

.app {
  width: 100%;
  height: 100vh;
  display: grid;
  grid-template-rows: auto auto 1fr auto;
}

h1 {
  text-align: center;
  background-color: #f4a226;
  font-family: "Monoton";
  font-size: 8rem;
  text-transform: uppercase;
  font-weight: 400;
  word-spacing: 30px;
  letter-spacing: -5px;
  padding: 2.4rem 0;
}

.add-form {
  background-color: #e5771f;
  padding: 2.8rem 0;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.8rem;
}

h3 {
  margin-right: 1.6rem;
  font-size: 2.4rem;
}

button,
select,
input {
  background-color: #ffebb3;
  color: #5a3e2b;
  font-family: inherit;
  border: none;
  border-radius: 10rem;
  padding: 1.2rem 3.2rem;
  font-weight: 700;
  font-size: 1.8rem;
  cursor: pointer;
}

.add-form button {
  text-transform: uppercase;
  background-color: #76c7ad;
}

.list {
  background-color: #5a3e2b;
  color: #ffebb3;
  padding: 4rem 0;

  display: flex;
  justify-content: space-between;
  flex-direction: column;
  gap: 3.2rem;
  align-items: center;
}

.actions button,
.list select {
  text-transform: uppercase;
  padding: 0.8rem 2.4rem;
  font-size: 1.4rem;
  font-weight: 700;
  margin: 0 0.8rem;
}

.list ul {
  list-style: none;
  width: 80%;
  overflow: scroll;

  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 1.2rem;
  justify-content: center;
  align-content: start;
}

.list li {
  display: flex;
  align-items: center;
  gap: 1.2rem;
}

input[type="checkbox"] {
  height: 2rem;
  width: 2rem;
  accent-color: #e5771f;
}

.list li button {
  cursor: pointer;
  background: none;
  border: none;
  font-size: 1.8rem;
  padding: 0.8rem;
  transform: translateY(2px);
}

.stats {
  background-color: #76c7ad;
  text-align: center;
  font-weight: 700;
  padding: 3.2rem 0;
}

.parking-grid {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  gap: 0.625rem; /* 10px converted to rem */
  padding: 0.625rem 0; /* 10px converted to rem */
  max-width: 50rem;
  margin: 0 auto;
  font-size: 1.25rem;
}

.parking-spot {
  transition: all 0.35s ease;
  border: 2px dashed var(--border-color);
  padding: 0.625rem; /* 10px converted to rem */
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  text-transform: uppercase;
  font-weight: bold;
  color: var(--text-color);
  /* Rectangle shape dimensions */
  width: auto; /* 100px converted to rem */
  height: 6.25rem; /* 300px converted to rem */
}

.parking-spot.available {
  cursor: pointer;
  background-color: var(--available-color);
}

.parking-spot.booked {
  cursor: not-allowed;
  background-color: var(--booked-color);
  border-color: var(--error-color);
}

.parking-spot.selected {
  background-color: var(--selected-color);
  border-color: var(--highlight-color);
}

.parking-spot img {
  width: auto; /* Adjust as needed, could be 100% */
  max-height: 95%; /* Adjust the image size relative to the parking spot height */
  max-width: 100%;
  pointer-events: none;
}

.parking-spot button {
  position: absolute;
  bottom: 0.525rem; /* 10px converted to rem */
  left: 50%;
  transform: translateX(-50%);
  padding: 0.3125rem 0.9375rem; /* 5px and 15px converted to rem */
  background-color: var(--button-color);
  border: none;
  color: white;
  border-radius: 4px;
  cursor: pointer;
  font-size: 1.25rem;
}

/* Responsive adjustments */
@media (max-width: 62rem) {
  /* 992px converted to rem */
  .parking-grid {
    grid-template-columns: repeat(3, 1fr);
  }
}

@media (max-width: 48rem) {
  /* 768px converted to rem */
  .parking-grid {
    grid-template-columns: repeat(2, 1fr);
  }
}
